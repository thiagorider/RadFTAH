% This file was created with JabRef 2.7.1.
% Encoding: UTF8

@STRING{dke = {Data \& Knowledge Engineering}}

@STRING{joop = {Journal of Object-Oriented Programming}}

@STRING{lnai = {Lecture Notes in Artificial Intelligence}}

@STRING{lncs = {Lecture Notes in Computer Science}}

@STRING{mibi = {Medizinische Informatik und Bioinformatik}}

@STRING{tkde = {IEEE Transactions on Knowledge and Data Engineering}}

@STRING{tods = {ACM Transactions on Database Systems}}

@STRING{tois = {ACM Transactions on Information Systems}}

@INCOLLECTION{raey,
  author = {Anghel, L. and Rebaudengo, M. and Reorda, M.Sonza and Violante, M.},
  title = {Multi-level Fault Effects Evaluation},
  booktitle = {Radiation Effects on Embedded Systems},
  publisher = {Springer Netherlands},
  year = {2007},
  editor = {VELAZCO, RAOUL and FOUILLAT, PASCAL and REIS, RICARDO},
  pages = {69-88},
  doi = {10.1007/978-1-4020-5646-8_4},
  isbn = {978-1-4020-5645-1},
  language = {English},
  url = {http://dx.doi.org/10.1007/978-1-4020-5646-8_4}
}

@INPROCEEDINGS{887180,
  author = {Baraza, J.-C. and Gracia, J. and Gil, D. and Gil, P.},
  title = {A prototype of a VHDL-based fault injection tool},
  booktitle = {Defect and Fault Tolerance in VLSI Systems, 2000. Proceedings. IEEE
	International Symposium on},
  year = {2000},
  pages = {396-404},
  abstract = {This paper presents the prototype of an automatic and model-independent
	fault injection tool, to use on an IBM-PC (or compatible) platform.
	The tool has been built around a commercial VHDL simulator. With
	this tool, both transient and permanent faults, of a wide range of
	types, can be injected into medium-complexity models. Another remarkable
	aspect of the tool is the fact that it is able to analyse the results
	obtained from the injection campaigns, in order to study the error
	syndrome of the system model and/or validate its fault-tolerance
	mechanisms. Some results of a fault injection campaign carried out
	to validate the dependability of a fault tolerant microcomputer system
	are shown. We have analysed the pathology of the propagated errors,
	measured their latencies, and calculated both error detection and
	recovery latencies and coverages},
  doi = {10.1109/DFTVS.2000.887180},
  file = {:../../../../02_PDFs/Referencias4/00887180.pdf:PDF},
  issn = {1550-5774},
  keywords = {computer testing;error detection;fault tolerant computing;hardware
	description languages;system recovery;virtual machines;IBM-PC platform;VHDL-based
	fault injection tool;dependability;error detection;error syndrome;fault
	tolerant microcomputer system;fault-tolerance mechanisms;medium-complexity
	models;model-independent fault injection tool;permanent faults;recovery
	latencies;transient faults;Circuit faults;Computational modeling;Computer
	simulation;Delay;Fault tolerance;Fault tolerant systems;Gas insulated
	transmission lines;Hardware;Microcomputers;Prototypes}
}

@ARTICLE{raey,
  author = {Bolchini, C. and Miele, A. and Rebaudengo, M. and Salice, F. and
	Sciuto, D. and Sterpone, L. and Violante, M.},
  title = {Software and Hardware Techniques for SEU Detection in IP Processors},
  journal = {Journal of Electronic Testing},
  year = {2008},
  volume = {24},
  pages = {35-44},
  number = {1-3},
  doi = {10.1007/s10836-007-5028-0},
  issn = {0923-8174},
  keywords = {Reliability; Hardware/software techniques; Single-event upset faults;
	Fault injection},
  language = {English},
  publisher = {Springer US},
  url = {http://dx.doi.org/10.1007/s10836-007-5028-0}
}

@ARTICLE{Beel2010,
  author = {{J}oeran {B}eel and {B}ela {G}ipp},
  title = {{A}cademic search engine spam and {G}oogle {S}cholar's resilience
	against it},
  journal = {Journal of Electronic Publishing},
  year = {2010},
  volume = {13},
  number = {3},
  month = {\#dec\#},
  note = {Available at http://docear.org},
  __markedentry = {[thiago:1]},
  doi = {10.3998/3336451.0013.305},
  file = {:../../../literature_repository/Example PDFs/Academic search engine spam and Google Scholars resilience against it.pdf:PDF},
  owner = {Docear},
  timestamp = {2012-08-20}
}

@INPROCEEDINGS{Beel2011c,
  author = {{B}eel, {J}oeran and {G}ipp, {B}ela and {L}anger, {S}tefan and {G}enzmehr,
	{M}arcel},
  title = {{D}ocear: {A}n {A}cademic {L}iterature {S}uite for {S}earching, {O}rganizing
	and {C}reating {A}cademic {L}iterature},
  booktitle = {{P}roceedings of the 11th annual international {ACM}/{IEEE} joint
	conference on {D}igital libraries},
  year = {2011},
  series = {{JCDL} '11},
  pages = {465--466},
  publisher = {{ACM}},
  note = {Available at http://docear.org},
  __markedentry = {[thiago:1]},
  doi = {10.1145/1998076.1998188},
  file = {:../../../literature_repository/Example PDFs/Docear -- An Academic Literature Suite.pdf:PDF},
  owner = {Docear},
  timestamp = {2012-08-20}
}

@INPROCEEDINGS{Beel2011b,
  author = {{J}oeran {B}eel and {B}ela {G}ipp and {S}tefan {L}anger and {M}arcel
	{G}enzmehr and {E}rik {W}ilde and {A}ndreas {N}Ã¼rnberger and {J}im
	{P}itman},
  title = {{I}ntroducing {M}r. {DL}ib, a {M}achine-readable {D}igital {L}ibrary},
  booktitle = {{P}roceedings of the 11th {ACM}/{IEEE} {J}oint {C}onference on {D}igital
	{L}ibraries ({JCDL}`11)},
  year = {2011},
  note = {Available at http://docear.org},
  __markedentry = {[thiago:1]},
  file = {:../../../literature_repository/Example PDFs/Mr. DLib -- A Machine Readable Digital Library.pdf:PDF},
  owner = {Docear},
  timestamp = {2012-08-20}
}

@ARTICLE{Beel10,
  author = {{J}oeran {B}eel and {B}ela {G}ipp and {E}rik {W}ilde},
  title = {{A}cademic {S}earch {E}ngine {O}ptimization ({ASEO}): {O}ptimizing
	{S}cholarly {L}iterature for {G}oogle {S}cholar and {C}o.},
  journal = {Journal of Scholarly Publishing},
  year = {2010},
  volume = {41},
  pages = {176-190},
  number = {2},
  month = {\#jan\#},
  note = {University of Toronto Press. Available at http://docear.org},
  __markedentry = {[thiago:1]},
  doi = {10.3138/jsp.41.2.176},
  file = {:../../../literature_repository/Example PDFs/Academic Search Engine Optimization (ASEO) -- Optimizing Scholarly Literature for Google Scholar and Co.pdf:PDF},
  owner = {Docear},
  timestamp = {2012-08-20}
}

@INPROCEEDINGS{937838,
  author = {Nicolescu, B. and Velazco, R. and Reorda, M.S.},
  title = {Effectiveness and limitations of various software techniques for
	"soft error" detection: a comparative study},
  booktitle = {On-Line Testing Workshop, 2001. Proceedings. Seventh International},
  year = {2001},
  pages = {172-177},
  abstract = {Deals with different software based strategies allowing the on-line
	detection of bit flip errors arising in microprocessor-based digital
	architectures as the consequence of the interaction with radiation.
	Fault injection experiments put in evidence the detection capabilities
	and the limitations of each of the studied techniques},
  doi = {10.1109/OLT.2001.937838},
  file = {:../../../../02_PDFs/Referencias4/00937838.pdf:PDF},
  keywords = {error detection;fault diagnosis;integrated circuit testing;microprocessor
	chips;radiation effects;transients;bit-flip errors;detection capabilities;fault
	injection experiments;microprocessor-based digital architectures;on-line
	detection;radiation effects;single event effects;soft error detection;software
	techniques;transient effects;CMOS technology;Circuit faults;Costs;Hardware;Integrated
	circuit technology;Manufacturing processes;Neutrons;Registers;Silicon
	on insulator technology;Single event transient}
}

@ARTICLE{raey,
  author = {Rebaudengo, M. and Reorda, M.Sonza and Violante, M.},
  title = {Accurate Analysis of Single Event Upsets in a Pipelined Microprocessor},
  journal = {Journal of Electronic Testing},
  year = {2003},
  volume = {19},
  pages = {577-584},
  number = {5},
  doi = {10.1023/A:1025130131636},
  issn = {0923-8174},
  keywords = {dependability evaluation; single event upsets; fault injection},
  language = {English},
  publisher = {Kluwer Academic Publishers},
  url = {http://dx.doi.org/10.1023/A%3A1025130131636}
}

@INPROCEEDINGS{1030193,
  author = {Rebaudengo, M. and Reorda, M.S. and Violante, M.},
  title = {Analysis of SEU effects in a pipelined processor},
  booktitle = {On-Line Testing Workshop, 2002. Proceedings of the Eighth IEEE International},
  year = {2002},
  pages = {112-116},
  abstract = {Modern processors embed features such as pipelined execution units
	and cache memories that can hardly be controlled by programmers through
	the processor instruction set. As a result, software-based fault
	injection approaches are no longer suitable for assessing the effects
	of SEUs in modern processors, since they are not able to evaluate
	the effects of SEUs affecting pipelines and caches. In this paper
	we report an analysis of a commercial processor core where the effects
	of SEUs located in the processor pipeline and cache memories are
	studied. Moreover the obtained results are compared with those software-based
	approaches provide. Experimental results show that software-based
	approaches may lead to errors during the failure rate estimation
	of up to 400%.},
  doi = {10.1109/OLT.2002.1030193},
  file = {:../../../../02_PDFs/Referencias4/01030193.pdf:PDF},
  keywords = {cache storage;fault simulation;fault tolerant computing;field programmable
	gate arrays;hardware description languages;multiprocessing systems;pipeline
	processing;radiation hardening (electronics);software tools;FPGA-based
	environment;SEU effects;SPARC;VHDL code;cache memories;failure rate
	estimation;fault injection environment;fault tolerance;high-performance
	processors;matrix multiplication program;pipelined processor;processor
	core;processor-hidden parts;software tool;software-based approaches;transient
	bit-flip;Application software;Automatic control;Cache memory;Circuit
	faults;Costs;Error analysis;Pipelines;Programming profession;Registers;Safety}
}

@INPROCEEDINGS{1159312,
  author = {Rebaudengo, M. and Reorda, M.S. and Violante, M. and Nicolescu, B.
	and Velano, R.},
  title = {Coping with SEUs/SETs in microprocessors by means of low-cost solutions:
	a comparison study},
  booktitle = {Radiation and Its Effects on Components and Systems, 2001. 6th European
	Conference on},
  year = {2001},
  pages = {392-397},
  month = {Sept},
  abstract = {In this paper two low-cost solutions devoted to provide processor-based
	systems with error detection capabilities are compared. The effects
	of SEUs and SETs are studied through simulation-based fault injection.
	The error detection capabilities of a hardware-implemented solution,
	based on parity code, are compared with those of a software-implemented
	solution based on source-level code modification. Radiation testing
	experiments confirmed results obtained by simulation.},
  doi = {10.1109/RADECS.2001.1159312},
  file = {:../../../../02_PDFs/Referencias4/01039689.pdf:PDF},
  keywords = {integrated circuit testing;radiation hardening (electronics);SEUs/SETs;error
	detection capabilities;hardware-implemented solution;low-cost solutions;microprocessors;parity
	code;simulation-based fault injection;software-implemented solution;source-level
	code modification;Application software;Circuit faults;Computational
	modeling;Computer errors;Error correction;Fault detection;Hardware;Microprocessors;Single
	event transient;Telephony}
}

@comment{jabref-meta: selector_publisher:}

@comment{jabref-meta: selector_author:}

@comment{jabref-meta: selector_journal:}

@comment{jabref-meta: selector_keywords:}

@comment{jabref-meta: groupsversion:3;}

@comment{jabref-meta: groupstree:
0 AllEntriesGroup:;
1 ExplicitGroup:link spam\;0\;;
1 ExplicitGroup:content spam\;0\;;
1 ExplicitGroup:competiror click fraud\;0\;;
1 KeywordGroup:Norman\;0\;owner\;Norman\;1\;0\;;
1 ExplicitGroup:ourpublications\;0\;Beel10\;Beel2010\;;
1 ExplicitGroup:test\;0\;Beel2010\;;
}

